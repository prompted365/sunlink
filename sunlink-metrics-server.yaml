apiVersion: apps/v1
kind: Deployment
metadata:
  name: sunlink-metrics-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sunlink-metrics-server
  template:
    metadata:
      labels:
        app: sunlink-metrics-server
    spec:
      containers:
        - name: metrics-server
          image: gcr.io/solarflux-harmony/metrics-server:latest
          ports:
            - containerPort: 8000
          env:
            - name: UPSTASH_BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: sunlink-metric-secrets
                  key: UPSTASH_BROKER_URL
    readinessProbe:
      httpGet:
        path: /metrics
        port: 8000
      initialDelaySeconds: 10
      periodSeconds: 10
    livenessProbe:
      httpGet:
        path: /metrics
        port: 8000
      initialDelaySeconds: 15
      periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sunlink-metrics-server
  namespace: default
  annotations:
    prometheus.io/scrape: "true" # Enable Prometheus scraping
    prometheus.io/port: "8000" # Specify the port for scraping
spec:
  selector:
    app: sunlink-metrics-server
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
